<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" ignored="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="688" started-at="2020-08-26T10:39:23 BRT" finished-at="2020-08-26T10:39:24 BRT">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@394e1a0f]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="688" started-at="2020-08-26T10:39:23 BRT" finished-at="2020-08-26T10:39:24 BRT">
      <class name="runner.TestRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.TestRunner@394e1a0f]" name="setUpClass" is-config="true" duration-ms="213" started-at="2020-08-26T10:39:23 BRT" finished-at="2020-08-26T10:39:23 BRT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="setUpBeforeClass()[pri:0, instance:runner.TestRunner@394e1a0f]" name="setUpBeforeClass" is-config="true" duration-ms="1" started-at="2020-08-26T10:39:23 BRT" finished-at="2020-08-26T10:39:23 BRT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method status="SKIP" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@394e1a0f]" name="runScenario" duration-ms="271" started-at="2020-08-26T10:39:23 BRT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-08-26T10:39:24 BRT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Analisar topicos do Discourse"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Desejo automatizar os testes web do desafio do MESA"]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[This scenario is skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: This scenario is skipped
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:71)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:83)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="SKIP" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@394e1a0f]" name="runScenario" duration-ms="2" started-at="2020-08-26T10:39:24 BRT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-08-26T10:39:24 BRT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Analisar topicos do Discourse"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Desejo automatizar os testes web do desafio do MESA"]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[This scenario is skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: This scenario is skipped
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:71)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:83)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.TestRunner@394e1a0f]" name="tearDownClass" is-config="true" duration-ms="81" started-at="2020-08-26T10:39:24 BRT" finished-at="2020-08-26T10:39:24 BRT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="PASS" signature="tearDownAfterClass()[pri:0, instance:runner.TestRunner@394e1a0f]" name="tearDownAfterClass" is-config="true" duration-ms="0" started-at="2020-08-26T10:39:24 BRT" finished-at="2020-08-26T10:39:24 BRT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
