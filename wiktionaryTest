// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class WiktionaryTestTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  public void busca() {
    driver.get("https://en.wiktionary.org/");
    driver.findElement(By.name("search")).sendKeys(vars.get("nome").toString());
    driver.findElement(By.name("go")).click();
    vars.put("tamanho", driver.findElements(By.xpath("//*[@id=\"Noun\"]/following::ol[1]/li")).size());
    vars.put("contem", js.executeScript("return false"));
    vars.put("c", js.executeScript("return 1"));
    [object Object]
    System.out.println("iniciando passo vars.get("c").toString()");
    vars.put("conteudo", driver.findElement(By.xpath("//*[@id=\"Noun\"]/following::ol[1]/li[vars.get("c").toString()]")).getText());
    [object Object]
    vars.put("contem", js.executeScript("return true"));
    vars.put("c", js.executeScript("return arguments[0]", vars.get("tamanho")));
    [object Object]
    vars.put("c", js.executeScript("return arguments[0] + 1", vars.get("c")));
    [object Object]
    assertEquals(vars.get("contem").toString(), "true");
  }
  @Test
  public void apple() {
    vars.put("nome", js.executeScript("return \"apple\""));
    vars.put("umaDefinicao", js.executeScript("return \"A common, round fruit produced by the tree Malus domestica, cultivated in temperate climates.\""));
    busca();
  }
  @Test
  public void pear() {
    vars.put("nome", js.executeScript("return \"pear\""));
    vars.put("umaDefinicao", js.executeScript("return \"An edible fruit produced by the pear tree, similar to an apple but elongated towards the stem.\""));
    busca();
  }
  @Test
  public void busca() {
    driver.get("https://en.wiktionary.org/");
    driver.findElement(By.name("search")).sendKeys(vars.get("nome").toString());
    driver.findElement(By.name("go")).click();
    vars.put("tamanho", driver.findElements(By.xpath("//*[@id=\"Noun\"]/following::ol[1]/li")).size());
    vars.put("contem", js.executeScript("return false"));
    vars.put("c", js.executeScript("return 1"));
    while ((Boolean) js.executeScript("return (arguments[0] <= arguments[1])", vars.get("c"),vars.get("tamanho"))) {
      System.out.println("iniciando passo vars.get("c").toString()");
      vars.put("conteudo", driver.findElement(By.xpath("//*[@id=\"Noun\"]/following::ol[1]/li[vars.get("c").toString()]")).getText());
      if ((Boolean) js.executeScript("return (arguments[0].indexOf(arguments[1]) >= 0)", vars.get("conteudo"),vars.get("umaDefinicao"))) {
        vars.put("contem", js.executeScript("return true"));
        vars.put("c", js.executeScript("return arguments[0]", vars.get("tamanho")));
      }
      vars.put("c", js.executeScript("return arguments[0] + 1", vars.get("c")));
    }
    assertEquals(vars.get("contem").toString(), "true");
  }
}
